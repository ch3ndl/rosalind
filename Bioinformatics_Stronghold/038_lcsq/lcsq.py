#!python3
# Chendl 2025-03-16
## Comment here

def lcsq(string_1:str, string_2:str)->str:
	longest_lenght_table = [[0] * (len(string_2)+1) for i in  range(len(string_1)+1)]
	preceded_pos_table = [[[]] * (len(string_2)+1) for i in  range(len(string_1)+1)]
	for i,char_i in enumerate(string_1):
		for j,char_j in enumerate(string_2):
			if char_i == char_j:
				longest_lenght_table[i+1][j+1] = longest_lenght_table[i][j]+1
				preceded_pos_table[i+1][j+1] = [i,j]
			else:
				if longest_lenght_table[i][j+1] > longest_lenght_table[i+1][j]:
					longest_lenght_table[i+1][j+1] = longest_lenght_table[i][j+1]
					preceded_pos_table[i+1][j+1] = [i,j+1]
				else:
					longest_lenght_table[i+1][j+1] = longest_lenght_table[i+1][j]
					preceded_pos_table[i+1][j+1] = [i+1,j]

	pos = preceded_pos_table[-1][-1]
	ret_string = ""
	for i in longest_lenght_table:
		print(i)
	while pos[0]!=0 and pos[1]!=0:
		next_pos = preceded_pos_table[pos[0]][pos[1]]
		if pos[0]-1 == next_pos[0] and pos[1]-1 == next_pos[1]:
			print(pos)
			ret_string = string_1[pos[0]-1] + ret_string
		pos = next_pos
	return ret_string

if __name__ == "__main__":
	seq_1 = ''.join("""GCACACATAATTTTAGGACTTAGGATTTAGGAGCTTGCGTTACACTGTTCCACTCGGGCA
CGCAGGGGTTTGCGCTAGCTCAACTCCCTGGTGCAAAATCGTATCAATTCTTGAATTTCG
GTTTACTCGTTGGCCCTCCACGCCGGTTCACATATCTGTCCTAGGCAAAGGTGGGGTTAA
CTATTCCAAACGCGGTGTTTCAAAGGCCCTGGGTTCCCAAACCCGGTTCATTAACTCGCA
TGCCGCTATGTCTTGTTAGGTATTACATCTTAAAGAACGCCATACACCCTGAACATCCTA
CACTGTTAATAAATTTGCAGCCGTTCGCCACTAAGACAAGAATAACATCTCTTAGTAACA
AGGAAGGGCCGGACCTCTTGAACCGTTCAGTTGTGCGGGCTTTGGCAGAATTATTTAAAC
TTGGGATCGGACGCACTCACGCGCGATGAGGTACTACTCTAGATCTCGCCATTAACGCTC
AGCTTGCGTCCTCCTTGGCCGCGAGTTTACATATGAAGCCGAGGGTGTTACCAATCCTAT
CTCGCGTCCCATTCCTTACAAAAGCTGCATCATCAGATCCGGTATCTTACACAACACTAC
AGAATTCCAATGCTGGCGTGAGGGGCGGGGGATCGACTAGTGCCAGGCCTTGACTTCGCA
ACATCAACCCTCGTCGGCCTCTGCTGGAAGCACCCAAGCCTGTCTAGAGTAGTGCTGTAC
GTCGAAAGAATAGATCGGAGTGTTCGCGGGGGAGGAGTACGTGTGGAACCGAGATATCGC
ATATCCATTTATGGTCACTGGGACTCATGTGGCGCGAAAGACCCTATAGGCGAAGTCCCA
CATCTCGTCATAGTTGCCTCCTTCATGTCACTGATAAGTAGTTCTCACTGAGA""".split('\n'))
	seq_2 = ''.join("""AACACGAGACCCGCGTGACTGAATCGAAACTGCATATATAATGGAGGATTCGGAAACTCT
GCTCATAAGTGTAAAAACTACGGTACTAACGTGAGAACCCCCGAACAATACACTGCAGTC
TGATCCATGTAGTCGGGAGTCCAAGGCGCGAGATATAAAAAGCGCTGATATCTGGTAGCG
CTTGTCCGTGTGGCTGATTACTACCAAGAGGTCGGCACGGGAACCACGTCCTTATCGAGG
CAACGACTCCGTAGCCGCTTAGCATCAGGGATCGTCAGGCCGCCGATTCAAATTTCACTG
ATGGGTACCCTCTGGGAGATTGGTCTAGGGTCTTATGATATGAGACCCCCCCCCGGAACG
AAGGAACAATCACTTGATCCGCCGGTGGATACCAACGACCTATGCCAATATTTTCACTTG
CATATTGGACCTTAGCTCTGCATCGATACCCCGGGCAGAAAGTGGTCGCTGCTCAGCCTT
TCATGTGTCCTTTATGAACCTCTATGGAAGTTGCTCGAATGGTTCACCCGGATTGGTGCG
GGTCAGATAGAGTCAGGACGACATAAAGGGATTTTGCGAGGCGTGAAGCCTCCCTGAGGG
AAAGATCTAGGATCACGCGTTTGGCCTATGCCGCTTCGGCGGACGGATGGTGTCGGTATG
TGTAATTCCACGTTGTACATGCTAGACGACCTGAGCAGGTCGCCTTACGGACATTAGGGG
GTTTGTTTTCGCCTTAAATGCAGGTTAAACCCTTCCACCTATTCCATCACTCGAACTCTC
TTCGCCACCTATCCATAAAAAGGATAGTCCTGCGTACCCGTATCCGTCCGATCGTGAATA
CTACTGAC
""".split('\n'))
	print(lcsq(seq_1,seq_2))